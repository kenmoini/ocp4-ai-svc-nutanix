---
- name: Get list of images
  uri:
    url: "{{ nutanix_prism_endpoint }}{{ nutanix_prism_api_v2_base }}/images?include_vm_disk_paths=false&include_vm_disk_sizes=false'"
    return_content: yes
    method: GET
    status_code: 200
    body_format: json
    force_basic_auth: yes
    user: "{{ nutanix_prism_username }}"
    password: "{{ nutanix_prism_password }}"
    validate_certs: "{{ not nutanix_prism_skip_ssl_verification|bool }}"
  register: nutanix_images_info

- name: Set Image Info
  set_fact:
    nutanix_ocp_ai_iso_uuid: "{{ image.uuid }}"
    nutanix_ocp_ai_iso_vm_disk_uuid: "{{ image.vm_disk_id }}"
  when: image.name == image_name
  loop: "{{ nutanix_images_info.json.entities }}"
  loop_control:
    loop_var: image

- name: Create new Image
  block:

  - name: Create Image if it does not exist
    uri:
      url: "{{ nutanix_prism_endpoint }}{{ nutanix_prism_api_v2_base }}/images"
      return_content: yes
      method: POST
      status_code: [200, 201]
      body_format: json
      body: >
        {
          "image_type": "ISO_IMAGE",
          "name": "{{ image_name }}",
          "annotation": "{{ image_description }}",
          "image_import_spec": {
            "url": "{{ image_source_uri }}",
            "storage_container_uuid": "{{ nutanix_image_storage_container_uuid }}"
          }
        }'
      force_basic_auth: yes
      user: "{{ nutanix_prism_username }}"
      password: "{{ nutanix_prism_password }}"
      validate_certs: "{{ not nutanix_prism_skip_ssl_verification|bool }}"
    register: nutanix_create_image_info

  - name: Get Task details
    uri:
      url: "{{ nutanix_prism_endpoint }}{{ nutanix_prism_api_v2_base }}/tasks/{{ nutanix_create_image_info.json.task_uuid }}"
      return_content: yes
      method: GET
      status_code: 200
      body_format: json
      force_basic_auth: yes
      user: "{{ nutanix_prism_username }}"
      password: "{{ nutanix_prism_password }}"
      validate_certs: "{{ not nutanix_prism_skip_ssl_verification|bool }}"
    register: nutanix_image_task_info

  - name: Get Image details
    uri:
      url: "{{ nutanix_prism_endpoint }}{{ nutanix_prism_api_v2_base }}/images/{{ nutanix_image_task_info.json.entity_list[0].entity_id }}"
      return_content: yes
      method: GET
      status_code: 200
      body_format: json
      force_basic_auth: yes
      user: "{{ nutanix_prism_username }}"
      password: "{{ nutanix_prism_password }}"
      validate_certs: "{{ not nutanix_prism_skip_ssl_verification|bool }}"
    register: nutanix_image_detail_info
    delay: 10
    retries: 30
    until: nutanix_image_detail_info is not failed

  - name: Set Image Info
    set_fact:
      nutanix_ocp_ai_iso_uuid: "{{ nutanix_image_detail_info.json.uuid }}"
      nutanix_ocp_ai_iso_vm_disk_uuid: "{{ nutanix_image_detail_info.json.vm_disk_id }}"
  when: nutanix_ocp_ai_iso_uuid is not defined

- name: Fail when no Image was created
  fail:
    msg: "No Image seems to have been uploaded, nutanix_ocp_ai_iso_uuid is undefined!"
  when: nutanix_ocp_ai_iso_uuid is not defined